package pe.com.bbva.reniec.ui;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;

import pe.com.bbva.reniec.dominio.Usuario;
import pe.com.bbva.reniec.negocio.UsuarioService;
import pe.com.bbva.reniec.utileria.Inject;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
public class PruebaUI extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private VerticalLayout verticalLayout_2;
	@AutoGenerated
	private Table table_1;
	@AutoGenerated
	private Button button_1;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	
	@Autowired
	UsuarioService usuarioService;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public PruebaUI() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		Inject.inject(this);
		postConstruct();
		
	}

	public void postConstruct(){
		List<Usuario> list=usuarioService.obtenerTodos();
		
		IndexedContainer container = new IndexedContainer();
		
		container.addContainerProperty("codigo", String.class,  null);
		container.addContainerProperty("nombre", String.class,  null);
		container.addContainerProperty("descripcion", String.class,  null);
		
		int con=1;
		for (Usuario usuario : list) {
			Item item = container.addItem(con++);
            item.getItemProperty("codigo").setValue(usuario.getNombres());
            item.getItemProperty("nombre").setValue(usuario.getPaterno());
            item.getItemProperty("descripcion").setValue(usuario.getMaterno());
		}
		
		table_1.setContainerDataSource(container);
	}
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		mainLayout.addComponent(verticalLayout_2);
		
		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("-1px");
		verticalLayout_2.setHeight("-1px");
		verticalLayout_2.setMargin(false);
		
		// button_1
		button_1 = new Button();
		button_1.setCaption("Button");
		button_1.setImmediate(false);
		button_1.setWidth("-1px");
		button_1.setHeight("-1px");
		verticalLayout_2.addComponent(button_1);
		
		// table_1
		table_1 = new Table();
		table_1.setImmediate(false);
		table_1.setWidth("400px");
		table_1.setHeight("200px");
		verticalLayout_2.addComponent(table_1);
		
		return verticalLayout_2;
	}

}
